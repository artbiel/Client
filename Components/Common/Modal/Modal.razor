@namespace Client.Components.Common

<div class="modal modal-wrapper" tabindex="-1" role="dialog"
     style=@("display: " + (Display ? "block" : "none" ))>
    <div class="modal-dialog @DialogClass" style="@DialogStyle" role="document">
        <div class="modal-content" style="z-index: 2000">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" @onclick="Close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">@Title</h4>
            </div>
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                @Footer
            </div>
        </div>
    </div>
    @if (Display)
    {
        <div class="modal-backdrop fade show" @onclick="Close"></div>
    }
</div>

<style>

    .modal-theme{
        background-color: @Theme.SideBarOptions.BackgroundColor;
        color: @Theme.SideBarOptions.Color;
    }
</style>

@code {
    [Parameter]
    public string DialogStyle { get; set; }

    [CascadingParameter(Name = "Theme")]
    public Theme Theme { get; set; }

    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    [Parameter]
    public string DialogClass { get; set; }

    [Parameter]
    public string Id { get; set; }

    private bool Display = false;

    public void Show()
    {
        Display = true;
        StateHasChanged();
    }

    public void Close()
    {
        Display = false;
        StateHasChanged();
    }
}

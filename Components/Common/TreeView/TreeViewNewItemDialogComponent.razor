@namespace Client.Components.Common
@inject IDispatcher Dispatcher

<MBDialog @ref="@NewRecordDialog"
          Title="Add New Record">
    <Body>
        <EditForm Model="newRecord" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator />
            <div class="mdc-layout-grid__inner">
                <div class="mdc-layout-grid__cell--span-12">
                    <MBSelect @bind-Value="@newRecord.Type"
                              style="margin-top: 6px; width: 100%;"
                              class="mdc-layout-grid__cell--span-12"
                              Items="recordTypeValues"
                              ItemValidation="@MBItemValidation.DefaultToFirst"
                              Label="Record Type"
                              SelectInputStyle="MBSelectInputStyle.Outlined" />
                </div>
                <div class="mdc-layout-grid__cell--span-12">
                    <MBTextField @bind-Value="@newRecord.Title"
                                 style="width: 100%"
                                 Label="Title"
                                 TextInputStyle="@MBTextInputStyle.Outlined"
                                 ValidationMessageFor="@(() => newRecord.Title)"
                                 Density="MBDensity.Comfortable" />
                </div>
            </div>
            <div class="mdc-layout-grid__cell--span-12" style="text-align: right;">
                <MBButton Label="Add" type="submit"></MBButton>
                <MBButton Label="Cancel" type="button" @onclick="@(async () => { await NewRecordDialog.HideAsync(); })" ButtonStyle="@MBButtonStyle.Text"></MBButton>
            </div>
        </EditForm>
    </Body>
</MBDialog>

@code {
    [Parameter]
    public RecordVM ParentRecord { get; set; }

    private MBDialog NewRecordDialog;

    private RecordVM newRecord = new RecordVM();

    MBSelectElement<RecordType>[] recordTypeValues = Enum.GetValues<RecordType>().Where(r => r != RecordType.Root)
       .Select(v => new MBSelectElement<RecordType> { Label = Enum.GetName(v), SelectedValue = v }).ToArray();

    private async Task OnSubmit()
    {
        Dispatcher.Dispatch(new AddWorkbanchCourseRecordAction(newRecord, ParentRecord));
        await NewRecordDialog.HideAsync();
    }

    public async Task ShowAsync() => await NewRecordDialog.ShowAsync();
}

@inherits FluxorComponent
@inject IState<RightSidebarState> RightSidebarState
@inject IDispatcher Dispatcher


<div class="header">
    <div class="d-flex justify-content-center">
        <button class="nav-button menu-toggler-button" @onclick="() => Dispatcher.Dispatch(new ToggleLeftSidebarAction())">
            <MBIcon IconName="menu" />
        </button>
        <h1 class="page-title">ScienceForks</h1>
    </div>
    <div class="d-flex">
        @*<AuthorizeView>
            <Authorized>
                @context.User.Identity.Name
            </Authorized>
            <NotAuthorized>
                <div class="edit-toggler-wrapper">
                    <MBButton ButtonStyle="MBButtonStyle.Outlined" Label="Sign In"
                              Density="MBDensity.Minus1" @onclick="ShowSignInDialog" />
                </div>
            </NotAuthorized>
        </AuthorizeView>*@
        <div class="mdc-typography mdc-typography--headline6" style="display: flex; align-items: center; margin-right: 15px">
           User
        </div>
        @if (RightSidebarState.Value.Exists)
        {
            <button class="nav-button" @onclick="() => Dispatcher.Dispatch(new ToggleRightSidebarAction())">
                <RadzenIcon Icon="more_horiz"></RadzenIcon>
            </button>
        }
    </div>
</div>

<SignInDialogComponent @ref="SignInDialog"/>

@code{
    private SignInDialogComponent SignInDialog;

    private async Task ShowSignInDialog()
    {
        await SignInDialog.ShowAsync();
    }
}